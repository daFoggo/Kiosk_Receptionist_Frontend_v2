import { IMenuItem } from "@/models/interaction-menu";
import {
  CalendarDays,
  CalendarHeart,
  FileUser,
  IdCard,
  ScanQrCode,
  Signature,
} from "lucide-react";
import AppointmentChecking from "../AppointmentChecking";
import GeneralCalendar from "../GeneralCalendar";
import PersonalCalendar from "../PersonalCalendar";
import Procedures from "../Procedures";
import UserInfo from "../UserInfo";
import VerifyCCCD from "../VerifyCCCD";

export const interactionMenu = (
  t: (key: string) => string
): Record<string, IMenuItem[]> => ({
  guest: [
    {
      id: 1,
      title: t("interactionMenu.verifyInfo.title"),
      description: t("interactionMenu.verifyInfo.description"),
      icon: IdCard,
      action: "dialog",
      component: VerifyCCCD,
      requiredProps: [],
    },
    {
      id: 2,
      title: t("interactionMenu.apppointmentCheckin.title"),
      description: t("interactionMenu.apppointmentCheckin.description"),
      icon: ScanQrCode,
      action: "dialog",
      component: AppointmentChecking,
      requiredProps: [],
      disabled: false,
    },
    {
      id: 3,
      title: t("interactionMenu.procedures.title"),
      description: t("interactionMenu.procedures.description"),
      icon: Signature,
      action: "drawer",
      component: Procedures,
      requiredProps: [],
      disabled: true,
    },
  ],
  student: [
    {
      id: 1,
      title: t("interactionMenu.generalSchedule.student.title"),
      description: t("interactionMenu.generalSchedule.student.description"),
      icon: CalendarDays,
      action: "sheet",
      component: GeneralCalendar,
      requiredProps: ["currentRole"],
      disabled: true,
    },
    {
      id: 2,
      title: t("interactionMenu.personalCalendar.student.title"),
      description: t("interactionMenu.personalCalendar.student.description"),
      icon: CalendarHeart,
      action: "sheet",
      component: PersonalCalendar,
      requiredProps: ["currentRole", "currentCccd"],
    },
    {
      id: 3,
      title: t("interactionMenu.userInfo.title"),
      description: t("interactionMenu.userInfo.description"),
      icon: FileUser,
      action: "drawer",
      component: UserInfo,
      requiredProps: ["currentCccd"],
      disabled: true,
    },
    {
      id: 4,
      title: t("interactionMenu.verifyInfo.title"),
      description: t("interactionMenu.verifyInfo.description"),
      icon: IdCard,
      action: "dialog",
      component: VerifyCCCD,
      requiredProps: [],
    },
    {
      id: 5,
      title: t("interactionMenu.apppointmentCheckin.title"),
      description: t("interactionMenu.apppointmentCheckin.description"),
      icon: ScanQrCode,
      action: "dialog",
      component: AppointmentChecking,
      requiredProps: [],
      disabled: false,
    },
    {
      id: 6,
      title: t("interactionMenu.procedures.title"),
      description: t("interactionMenu.procedures.description"),
      icon: Signature,
      action: "drawer",
      component: Procedures,
      requiredProps: [],
      disabled: true,
    },
  ],
  instructor: [
    {
      id: 1,
      title: t("interactionMenu.generalSchedule.instructor.title"),
      description: t("interactionMenu.generalSchedule.instructor.description"),
      icon: CalendarDays,
      action: "sheet",
      component: GeneralCalendar,
      requiredProps: ["currentRole"],
      disabled: true,
    },
    {
      id: 2,
      title: t("interactionMenu.personalCalendar.instructor.title"),
      description: t("interactionMenu.personalCalendar.instructor.description"),
      icon: CalendarHeart,
      action: "sheet",
      component: PersonalCalendar,
      requiredProps: ["currentRole", "currentCccd"],
    },
    {
      id: 3,
      title: t("interactionMenu.userInfo.title"),
      description: t("interactionMenu.userInfo.description"),
      icon: FileUser,
      action: "drawer",
      component: UserInfo,
      requiredProps: ["currentCccd"],
      disabled: true,
    },
    {
      id: 4,
      title: t("interactionMenu.verifyInfo.title"),
      description: t("interactionMenu.verifyInfo.description"),
      icon: IdCard,
      action: "dialog",
      component: VerifyCCCD,
      requiredProps: [],
    },
    {
      id: 5,
      title: t("interactionMenu.apppointmentCheckin.title"),
      description: t("interactionMenu.apppointmentCheckin.description"),
      icon: ScanQrCode,
      action: "dialog",
      component: AppointmentChecking,
      requiredProps: [],
      disabled: false,
    },
    {
      id: 6,
      title: t("interactionMenu.procedures.title"),
      description: t("interactionMenu.procedures.description"),
      icon: Signature,
      action: "drawer",
      component: Procedures,
      requiredProps: [],
      disabled: true,
    },
  ],
  officer: [
    {
      id: 1,
      title: t("interactionMenu.generalSchedule.instructor.title"),
      description: t("interactionMenu.generalSchedule.instructor.description"),
      icon: CalendarDays,
      action: "sheet",
      component: GeneralCalendar,
      requiredProps: ["currentRole"],
      disabled: true,
    },
    {
      id: 2,
      title: t("interactionMenu.personalCalendar.instructor.title"),
      description: t("interactionMenu.personalCalendar.instructor.description"),
      icon: CalendarHeart,
      action: "sheet",
      component: PersonalCalendar,
      requiredProps: ["currentRole", "currentCccd"],
      disabled: true,
    },
    {
      id: 3,
      title: t("interactionMenu.userInfo.title"),
      description: t("interactionMenu.userInfo.description"),
      icon: FileUser,
      action: "drawer",
      component: UserInfo,
      requiredProps: ["currentCccd"],
      disabled: true,
    },
    {
      id: 4,
      title: t("interactionMenu.verifyInfo.title"),
      description: t("interactionMenu.verifyInfo.description"),
      icon: IdCard,
      action: "dialog",
      component: VerifyCCCD,
      requiredProps: [],
    },
    {
      id: 5,
      title: t("interactionMenu.apppointmentCheckin.title"),
      description: t("interactionMenu.apppointmentCheckin.description"),
      icon: ScanQrCode,
      action: "dialog",
      component: AppointmentChecking,
      requiredProps: [],
      disabled: false,
    },
    {
      id: 6,
      title: t("interactionMenu.procedures.title"),
      description: t("interactionMenu.procedures.description"),
      icon: Signature,
      action: "drawer",
      component: Procedures,
      requiredProps: [],
    },
  ],
});
